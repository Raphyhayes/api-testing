{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Raphy/code/api-testing.mjs/components/MostRecentLaunchDisplay.js\",\n    _s = $RefreshSig$();\n\nimport fetch from \"node-fetch\";\nimport { useState } from \"react\";\nexport default function MostRecentLaunchDisplay() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      latestLaunchData = _useState[0],\n      setLatestLaunchData = _useState[1];\n\n  function handleButtonClick() {\n    fetch(\"/api/launch-fetcher\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        endpoint: \"latest\"\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      data = {\n        reddit: data.links.reddit,\n        pics: data.flickr.original,\n        webcast: data.webcast,\n        name: data.name\n      };\n      setLatestLaunchData(data);\n    });\n  }\n\n  console.log(\"state\", Object.keys(latestLaunchData));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Fetch Most Recent Launch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), Object.keys(latestLaunchData).length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"latestLaunchData.name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\"Webcast : \", latestLaunchData.webcast]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: \"Pics : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), latestLaunchData.pics.map(function (pic) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: \"Reddit Threads : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), Object.keys(latestLaunchData.reddit).map(function (key) {\n        /*#__PURE__*/\n        _jsxDEV(\"li\", {\n          children: \"\".concat(key, \" : \").concat(latestLaunchData.reddit[key])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, _this);\n      })]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(MostRecentLaunchDisplay, \"3fwxnVca65bSdDyEkQAf4MxV7yU=\");\n\n_c = MostRecentLaunchDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MostRecentLaunchDisplay\");","map":{"version":3,"sources":["/Users/Raphy/code/api-testing.mjs/components/MostRecentLaunchDisplay.js"],"names":["fetch","useState","MostRecentLaunchDisplay","latestLaunchData","setLatestLaunchData","handleButtonClick","method","headers","body","JSON","stringify","endpoint","then","response","json","data","reddit","links","pics","flickr","original","webcast","name","console","log","Object","keys","length","map","pic","key"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,uBAAT,GAAmC;AAAA;;AAAA;;AAAA,kBACAD,QAAQ,CAAC,EAAD,CADR;AAAA,MACzCE,gBADyC;AAAA,MACvBC,mBADuB;;AAEhD,WAASC,iBAAT,GAA6B;AAC3BL,IAAAA,KAAK,CAAC,qBAAD,EAAwB;AAC3BM,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFkB;AAK3BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,QAAQ,EAAE;AADS,OAAf;AALqB,KAAxB,CAAL,CASGC,IATH,CASQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KATR,EAUGF,IAVH,CAUQ,UAACG,IAAD,EAAU;AACdA,MAAAA,IAAI,GAAG;AACLC,QAAAA,MAAM,EAAED,IAAI,CAACE,KAAL,CAAWD,MADd;AAELE,QAAAA,IAAI,EAAEH,IAAI,CAACI,MAAL,CAAYC,QAFb;AAGLC,QAAAA,OAAO,EAAEN,IAAI,CAACM,OAHT;AAILC,QAAAA,IAAI,EAAEP,IAAI,CAACO;AAJN,OAAP;AAMAlB,MAAAA,mBAAmB,CAACW,IAAD,CAAnB;AACD,KAlBH;AAmBD;;AACDQ,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,MAAM,CAACC,IAAP,CAAYvB,gBAAZ,CAArB;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEE,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGoB,MAAM,CAACC,IAAP,CAAYvB,gBAAZ,EAA8BwB,MAA9B,GAAuC,CAAvC,iBACC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,iCAAexB,gBAAgB,CAACkB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIGlB,gBAAgB,CAACe,IAAjB,CAAsBU,GAAtB,CAA0B,UAACC,GAAD;AAAA,4BACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADyB;AAAA,OAA1B,CAJH,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQGJ,MAAM,CAACC,IAAP,CAAYvB,gBAAgB,CAACa,MAA7B,EAAqCY,GAArC,CAAyC,UAACE,GAAD,EAAS;AACjD;AAAA;AAAA,8BAAQA,GAAR,gBAAiB3B,gBAAgB,CAACa,MAAjB,CAAwBc,GAAxB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,OAFA,CARH;AAAA,oBAHJ;AAAA,kBADF;AAmBD;;GA3CuB5B,uB;;KAAAA,uB","sourcesContent":["import fetch from \"node-fetch\";\nimport { useState } from \"react\";\n\nexport default function MostRecentLaunchDisplay() {\n  const [latestLaunchData, setLatestLaunchData] = useState([]);\n  function handleButtonClick() {\n    fetch(\"/api/launch-fetcher\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        endpoint: \"latest\",\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        data = {\n          reddit: data.links.reddit,\n          pics: data.flickr.original,\n          webcast: data.webcast,\n          name: data.name,\n        };\n        setLatestLaunchData(data);\n      });\n  }\n  console.log(\"state\", Object.keys(latestLaunchData));\n  return (\n    <>\n      <button onClick={handleButtonClick}>Fetch Most Recent Launch</button>\n      {Object.keys(latestLaunchData).length > 0 && (\n        <>\n          <h3>latestLaunchData.name</h3>\n          <ul>Webcast : {latestLaunchData.webcast}</ul>\n          <ul>Pics : </ul>\n          {latestLaunchData.pics.map((pic) => (\n            <li>{}pic</li>\n          ))}\n          <ul>Reddit Threads : </ul>\n          {Object.keys(latestLaunchData.reddit).map((key) => {\n            <li>{`${key} : ${latestLaunchData.reddit[key]}`}</li>;\n          })}\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}