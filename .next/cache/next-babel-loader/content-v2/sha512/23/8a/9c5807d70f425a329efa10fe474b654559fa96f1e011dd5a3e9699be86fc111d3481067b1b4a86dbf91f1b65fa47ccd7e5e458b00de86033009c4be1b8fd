{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Raphy/code/api-testing.mjs/components/MostRecentLaunchDisplay.js\";\nimport fetch from \"node-fetch\";\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nexport default function MostRecentLaunchDisplay() {\n  const {\n    0: latestLaunchData,\n    1: setLatestLaunchData\n  } = useState([]);\n\n  function handleButtonClick() {\n    fetch(\"/api/launch-fetcher\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        endpoint: \"latest\"\n      })\n    }).then(response => response.json()).then(data => {\n      data = {\n        reddit: data.links.reddit,\n        pics: data.links.flickr.original,\n        webcast: data.links.webcast,\n        name: data.name\n      };\n      setLatestLaunchData(data);\n    });\n  }\n\n  console.log(latestLaunchData.reddit);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Fetch Most Recent Launch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), Object.keys(latestLaunchData).length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: latestLaunchData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          target: \"_blank\",\n          href: latestLaunchData.webcast,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Webcast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Pics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), \" :\", latestLaunchData.pics.map(pic => /*#__PURE__*/_jsxDEV(\"div\", {\n          width: 50,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pic,\n            height: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Reddit Threads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), \" :\", Object.keys(latestLaunchData.reddit).map(key => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: latestLaunchData.reddit[key],\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/Raphy/code/api-testing.mjs/components/MostRecentLaunchDisplay.js"],"names":["fetch","useState","Link","MostRecentLaunchDisplay","latestLaunchData","setLatestLaunchData","handleButtonClick","method","headers","body","JSON","stringify","endpoint","then","response","json","data","reddit","links","pics","flickr","original","webcast","name","console","log","Object","keys","length","map","pic","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,eAAe,SAASC,uBAAT,GAAmC;AAChD,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CJ,QAAQ,CAAC,EAAD,CAAxD;;AACA,WAASK,iBAAT,GAA6B;AAC3BN,IAAAA,KAAK,CAAC,qBAAD,EAAwB;AAC3BO,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFkB;AAK3BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,QAAQ,EAAE;AADS,OAAf;AALqB,KAAxB,CAAL,CASGC,IATH,CASSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EATtB,EAUGF,IAVH,CAUSG,IAAD,IAAU;AACdA,MAAAA,IAAI,GAAG;AACLC,QAAAA,MAAM,EAAED,IAAI,CAACE,KAAL,CAAWD,MADd;AAELE,QAAAA,IAAI,EAAEH,IAAI,CAACE,KAAL,CAAWE,MAAX,CAAkBC,QAFnB;AAGLC,QAAAA,OAAO,EAAEN,IAAI,CAACE,KAAL,CAAWI,OAHf;AAILC,QAAAA,IAAI,EAAEP,IAAI,CAACO;AAJN,OAAP;AAMAlB,MAAAA,mBAAmB,CAACW,IAAD,CAAnB;AACD,KAlBH;AAmBD;;AACDQ,EAAAA,OAAO,CAACC,GAAR,CAAYrB,gBAAgB,CAACa,MAA7B;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEX,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGoB,MAAM,CAACC,IAAP,CAAYvB,gBAAZ,EAA8BwB,MAA9B,GAAuC,CAAvC,iBACC;AAAA,8BACE;AAAA,kBAAKxB,gBAAgB,CAACmB;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,MAAM,EAAC,QAAb;AAAsB,UAAA,IAAI,EAAEnB,gBAAgB,CAACkB,OAA7C;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,QAEGlB,gBAAgB,CAACe,IAAjB,CAAsBU,GAAtB,CAA2BC,GAAD,iBACzB;AAAK,UAAA,KAAK,EAAE,EAAZ;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEA,GAAV;AAAe,YAAA,MAAM,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAeE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,QAEGJ,MAAM,CAACC,IAAP,CAAYvB,gBAAgB,CAACa,MAA7B,EAAqCY,GAArC,CAA0CE,GAAD,IAAS;AACjD,8BACE;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAE3B,gBAAgB,CAACa,MAAjB,CAAwBc,GAAxB,CAAZ;AAAA,qCACE;AAAA,0BAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SARA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA,oBAHJ;AAAA,kBADF;AAmCD","sourcesContent":["import fetch from \"node-fetch\";\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nexport default function MostRecentLaunchDisplay() {\n  const [latestLaunchData, setLatestLaunchData] = useState([]);\n  function handleButtonClick() {\n    fetch(\"/api/launch-fetcher\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        endpoint: \"latest\",\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        data = {\n          reddit: data.links.reddit,\n          pics: data.links.flickr.original,\n          webcast: data.links.webcast,\n          name: data.name,\n        };\n        setLatestLaunchData(data);\n      });\n  }\n  console.log(latestLaunchData.reddit);\n  return (\n    <>\n      <button onClick={handleButtonClick}>Fetch Most Recent Launch</button>\n      {Object.keys(latestLaunchData).length > 0 && (\n        <>\n          <h3>{latestLaunchData.name}</h3>\n          <ul>\n            <Link target=\"_blank\" href={latestLaunchData.webcast}>\n              <a>Webcast</a>\n            </Link>\n          </ul>\n          <ul>\n            <strong>Pics</strong> :\n            {latestLaunchData.pics.map((pic) => (\n              <div width={50}>\n                <img src={pic} height={100}></img>\n              </div>\n            ))}\n          </ul>\n          <ul>\n            <strong>Reddit Threads</strong> :\n            {Object.keys(latestLaunchData.reddit).map((key) => {\n              return (\n                <li>\n                  <Link href={latestLaunchData.reddit[key]}>\n                    <a>{key}</a>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}